namespace RobinHood70.WallE.Clients
{
	using System;
	using System.Net.Http;
	using RobinHood70.CommonCode;

	/// <summary>The reason for requested delay.</summary>
	public enum DelayReason
	{
		/// <summary>A client requested a throttle not generated by the site.</summary>
		ClientThrottled,

		/// <summary>The site returned an error and we're delaying until it's time to retry.</summary>
		Error,

		/// <summary>The site is throttling logins due to multiple retries.</summary>
		LoginThrottled,

		/// <summary>The site returned a maxlag result.</summary>
		MaxLag
	}

	/// <summary>Specifies the events and methods required by all client implementations.</summary>
	public interface IMediaWikiClient
	{
		#region Events

		/// <summary>The event raised when either the site or the client is requesting a delay.</summary>
		event StrongEventHandler<IMediaWikiClient, DelayEventArgs> RequestingDelay;
		#endregion

		#region Methods

		/// <summary>Downloads a file directly to disk instead of returning it as a string.</summary>
		/// <param name="uri">The URI to download from.</param>
		/// <param name="fileName">The filename to save to.</param>
		/// <returns><see langword="true"/> if the download succeeded; otherwise <see langword="false"/>.</returns>
		bool DownloadFile(Uri uri, string fileName);

		/// <summary>Expires all cookies.</summary>
		void ExpireAll();

		/// <summary>Gets the text of the result returned by the given URI.</summary>
		/// <param name="uri">The URI to get.</param>
		/// <returns>The text of the result.</returns>
		string Get(Uri uri);

		/// <summary>POSTs text data and retrieves the result.</summary>
		/// <param name="uri">The URI to POST data to.</param>
		/// <param name="content">The content to POST.</param>
		/// <returns>The text of the result.</returns>
		string Post(Uri uri, HttpContent content);

		/// <summary>This method is used both to throttle clients as well as to forward any wiki-requested delays, such as from maxlag. Clients should respect any delays requested by the wiki unless they expect to abort the procedure, or for testing.</summary>
		/// <param name="delayTime">The amount of time to delay for.</param>
		/// <param name="reason">The reason for the delay, as specified by the caller.</param>
		/// <param name="description">The human-readable reason for the delay, as specified by the caller.</param>
		/// <returns>A value indicating whether or not the delay was respected.</returns>
		bool RequestDelay(TimeSpan delayTime, DelayReason reason, string description);
		#endregion
	}
}
